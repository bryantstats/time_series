t1_sma = SMA(t1, n = k)
# plot the moving average series
lines(t1_sma, col = "red")
# In exponential smoothing, a higher ratio will weight more on the recent observation,
# ratio close to 1 will have a 100% weight on the most recent observation
w = .1
t1_ema = EMA(t1, ratio = 1-w)
plot(t1)
lines(t1_ema, col = "red")
# In exponential smoothing, a higher ratio will weight more on the recent observation,
# ratio close to 1 will have a 100% weight on the most recent observation
w = .5
t1_ema = EMA(t1, ratio = 1-w)
plot(t1)
lines(t1_ema, col = "red")
# In exponential smoothing, a higher ratio will weight more on the recent observation,
# ratio close to 1 will have a 100% weight on the most recent observation
w = .9
t1_ema = EMA(t1, ratio = 1-w)
plot(t1)
lines(t1_ema, col = "red")
library(forecast)
w = .2
ses.goog <- ses(y, alpha = 1-w, h = 10)
autoplot(ses.goog)
?ses
library(forecast)
w = .2
ses.goog <- holt(y, alpha = 1-w, h = 10)
autoplot(ses.goog)
library(forecast)
w = .2
ses.goog <- holt(y, alpha = 1-w)
autoplot(ses.goog)
?ses
# R markdown options
knitr::opts_chunk$set(echo = TRUE,
fig.width = 10,
fig.height = 5,
fig.align = "center",
message = FALSE,
warning = FALSE)
# Load packages
library(tidyverse)
library(forecast)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
model <- tslm(y ~ season)
model
summary(model)
```
summary(model)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
model <- tslm(y ~ trend + season)
summary(model)
true_value = y
fitted_value = fitted(model)
fit_plot(true_value, fitted_value)
# R markdown options
knitr::opts_chunk$set(echo = TRUE,
fig.width = 10,
fig.height = 5,
fig.align = "center",
message = FALSE,
warning = FALSE)
# Load packages
library(tidyverse)
library(forecast)
library(forecast)
library(fpp2)
# read the data
uschange =  read.csv('uschange.csv')
# turn the data to a series
uschange = ts(uschange, start = 1970, frequency = 4)
plot(uschange)
autoplot(uschange[,c("Consumption","Income")]) +
ylab("% change") + xlab("Year")
qplot(uschange[, "Consumption"], uschange[, "Production"])
model = tslm(Consumption ~ Income, data=uschange)
model
summary(model)
fit_plot = function(true_value, fitted_value)
{
library(tidyverse)
library(ggplot2)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
model <- tslm(
Consumption ~ Income,
data=uschange)
true_value = uschange[,"Consumption"]
fitted_value = fitted(model)
fit_plot(true_value, fitted_value)
checkresiduals(model)
checkresiduals(model)
a_t = read.csv('aus_airpassengers.csv')
a_t = ts(a_t, start = 1970, frequency = 1)
plot(a_t)
b_t = read.csv('guinea_rice.csv')
b_t = ts(a_t, start = 1970, frequency = 1)
plot(b_t)
model = tslm(a_t ~ b_t)
summary(model)
true_value = a_t
fitted_value = fitted(model)
fit_plot(true_value, fitted_value)
model <- tslm(a_t ~ trend)
summary(model)
true_value = a_t
fitted_value = fitted(model)
fit_plot(true_value, fitted_value)
model = tslm(Consumption ~ Income + Savings, data=uschange)
summary(model)
true_value = uschange[, 'Consumption']
fitted_value = fitted(model)
fit_plot(true_value, fitted_value)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
model <- tslm(y ~ season)
model
summary(model)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
model <- tslm(y ~ trend + season)
summary(model)
true_value = y
fitted_value = fitted(model)
fit_plot(true_value, fitted_value)
model
model$data
model$data
model$x
model[1]
model[2]
model$x
model[15]
model$fitted.values
fit_plot = function(true_value, fitted_value)
{
library(tidyverse)
library(ggplot2)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
fit_plot2 = function(m)
{
library(tidyverse)
library(ggplot2)
true_value = m[15]
fitted_value = fitted(m)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
fit_plot2(model)
true_value = y
fitted_value = fitted(model)
fit_plot(true_value, fitted_value)
fit_plot2(model)
model[15]
min(model[15])
class(model[15])
ts(model[15])
model$data
class(model$data)
model$model
model[2]
model[1]
model$data[,1]
class(model$data[,1])
fit_plot = function(true_value, fitted_value)
{
library(tidyverse)
library(ggplot2)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
fit_plot2 = function(m)
{
library(tidyverse)
library(ggplot2)
true_value = m$data[,1]
fitted_value = fitted(m)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
fit_plot2(model)
fit_plot = function(m)
{
library(tidyverse)
library(ggplot2)
true_value = m$data[,1]
fitted_value = fitted(m)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
library(forecast)
library(fpp2)
# read the data
uschange =  read.csv('uschange.csv')
# turn the data to a series
uschange = ts(uschange, start = 1970, frequency = 4)
autoplot(uschange[,c("Consumption","Income")]) +
ylab("% change") + xlab("Year")
library(forecast)
library(fpp2)
# read the data
uschange =  read.csv('uschange.csv')
# turn the data to a series
uschange = ts(uschange, start = 1970, frequency = 4)
autoplot(uschange[,c("Consumption","Income")]) +
ylab("% change") + xlab("Year")
qplot(uschange[, "Consumption"], uschange[, "Production"])
model = tslm(Consumption ~ Income, data=uschange)
model
summary(model)
fit_plot = function(m)
{
library(tidyverse)
library(ggplot2)
true_value = m$data[,1]
fitted_value = fitted(m)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
model <- tslm(
Consumption ~ Income,
data=uschange)
fit_plot(model)
model
model$data[,1]
model$assign
model$x
class(model$x)
fit_plot = function(m)
{
library(tidyverse)
library(ggplot2)
true_value = m$x
fitted_value = fitted(m)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
yt = uschange[,c("Consumption")]
xt =  uschange[,c("Income")]
qplot(yt, xt)
autoplot(uschange[,c("Consumption","Income")])
autoplot(yt, xt)
autoplot(yt)
line(xt)
plot(yt)
line(xt)
plot(yt)
line(xt, col = 'red')
line(xt, color = 'red')
?line
plot(yt)
lines(xt)
plot(yt)
lines(xt)
plot(yt)
lines(xt, col = 'red')
model = tslm(yt ~ xt)
model
summary(model)
fit_plot = function(m)
{
library(tidyverse)
library(ggplot2)
true_value = m$x
fitted_value = fitted(m)
limit = c(min(true_value), max(true_value))
# Plot
cbind(true_value, fitted_value)%>%
as.data.frame() %>%
ggplot(aes(x=true_value, y=fitted_value)) +
geom_point() +
geom_abline(intercept=0, slope=1, color = 'red')+
coord_cartesian(xlim = limit,
ylim = limit)
}
model <- tslm(yt ~ xt)
?aus_airpassengers
?airpassengers
library(fpp2)
?aus_airpassengers
?airpassengers
library(fpp3)
?airpassengers
?AirPassengers
aus_airpassengers
?aus_airpassengers
?guinea_rice
fit_plot(model)
b_t = read.csv('guinea_rice.csv')
# frequency = 1 because this is a annual data
# the year start from 1970
b_t = ts(a_t, start = 1970, frequency = 1)
plot(b_t)
a_t = read.csv('aus_airpassengers.csv')
# frequency = 1 because this is a annual data
# the year start from 1970
a_t = ts(a_t, start = 1970, frequency = 1)
plot(a_t)
b_t = read.csv('guinea_rice.csv')
# frequency = 1 because this is a annual data
# the year start from 1970
b_t = ts(a_t, start = 1970, frequency = 1)
plot(b_t)
model = tslm(a_t ~ b_t)
summary(model)
fit_plot(model)
model <- tslm(a_t ~ trend)
summary(model)
fit_plot(model)
?uschange
uschange =  read.csv('uschange.csv')
# turn the data to a series
# notice frequency = 4 because this is a quarterly data
uschange = ts(uschange, start = 1970, frequency = 4)
model = tslm(Consumption ~ Income + Savings, data=uschange)
summary(model)
fit_plot(model)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
model <- tslm(y ~ season)
model
summary(model)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
model <- tslm(y ~ trend + season)
summary(model)
fit_plot(model)
model <- tslm(yt ~ xt)
fit_plot(model)
tslm
?tslm
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, eval = FALSE)
plot(rnorm(100))
set.seed(2024)
y = ts(rnorm(100))
plot(y)
set.seed(2024)
y = ts(c(1:100)+ rnorm(100, sd = .2))
plot(y)
set.seed(2024)
y = ts(c(1:100)+ rnorm(100, sd = .5))
plot(y)
set.seed(2024)
y = ts(c(1:100)+ rnorm(100, sd = 1))
plot(y)
set.seed(2024)
y = ts(c(1:100)+ rnorm(100, sd = 5))
plot(y)
set.seed(2024)
y = ts(c(1:100)+ rnorm(100, sd = 3))
plot(y)
set.seed(2024)
y = ts(-2*c(1:100) + rnorm(100, sd = 3))
plot(y)
set.seed(2024)
y = ts(c(1:100)+ rnorm(100, sd = 3))
plot(y)
set.seed(2024)
y = ts(c(1:100)+ rnorm(100, sd = 3))
plot(y)
set.seed(2024)
y = ts(cos(c(1:100))+ rnorm(100, sd = 3))
plot(y)
set.seed(2024)
y = ts(5*cos(c(1:100))+ rnorm(100, sd = 3))
plot(y)
set.seed(2024)
y = ts(5*cos(5*c(1:100))+ rnorm(100, sd = 3))
plot(y)
set.seed(2024)
y = ts(5*cos(5*c(1:100))+ rnorm(100, sd = 1))
plot(y)
set.seed(2024)
y = ts(5*cos(5*c(1:100))+ rnorm(100, sd = .1))
plot(y)
set.seed(2024)
y = ts(5*cos(50*c(1:100))+ rnorm(100, sd = .1))
plot(y)
set.seed(2024)
y = ts(5*cos(50*c(1:100))+ rnorm(100, sd = .5))
plot(y)
set.seed(2024)
y = ts(5*cos(50*c(1:100))+ rnorm(100, sd = .3))
plot(y)
set.seed(2024)
y = ts(2*c(1:100)+ 5*cos(50*c(1:100))+ rnorm(100, sd = .3))
plot(y)
set.seed(2024)
y = ts(2*c(1:1000)+ 5*cos(50*c(1:1000))+ rnorm(1000, sd = .3))
plot(y)
set.seed(2024)
y = ts(2*c(1:100)+ 5*cos(50*c(1:100))+ rnorm(100, sd = .3))
plot(y)
set.seed(2024)
y = ts(2*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = .3))
plot(y)
set.seed(2024)
y = ts(5*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = .3))
plot(y)
set.seed(2024)
y = ts(3*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = .3))
plot(y)
set.seed(2024)
y = rnorm(100, sd = 3))
set.seed(2024)
y = rnorm(100, sd = 3)
plot(y)
set.seed(2024)
y = ts(rnorm(100, sd = .3))
plot(y)
us_change
model = tslm(Consumption ~ ., data=uschange)
summary(model)
fit_plot(model)
elecdaily
plot(elecdaily)
set.seed(2024)
y = ts(3*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = .3))
plot(y)
set.seed(2024)
y = ts(3*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = .5))
plot(y)
set.seed(2024)
y = ts(3*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = 1))
plot(y)
set.seed(2024)
y = ts(3*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = 10))
plot(y)
set.seed(2024)
y = ts(3*c(1:100)+ 50*cos(50*c(1:100))+ rnorm(100, sd = 5))
plot(y)
plot(AirPassengers)
AirPassengers
tslm(AirPassengers~trend + season)
model = tslm(AirPassengers~trend + season)
fcast <- forecast(model)
autoplot(fcast) +
ggtitle("Forecasts of beer production using regression") +
xlab("Year") + ylab("megalitres")
summary(model)
fit_plot(model)
?AirPassengers
write.csv(AirPassengers, 'AirPassengers.csv', row.names = FALSE)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
plot(y)
y = read.csv('beer.csv')
y = ts(y, start = c(1992, 1), frequency = 4)
plot(y)
